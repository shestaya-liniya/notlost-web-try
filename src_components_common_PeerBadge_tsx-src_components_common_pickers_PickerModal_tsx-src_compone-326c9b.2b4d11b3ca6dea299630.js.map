{"version":3,"file":"src_components_common_PeerBadge_tsx-src_components_common_pickers_PickerModal_tsx-src_compone-326c9b.2b4d11b3ca6dea299630.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9"],"sourcesContent":["import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n  withBalanceBar?: boolean;\n  isLowStackPriority?: true;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n  withBalanceBar,\n  isLowStackPriority,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n      withBalanceBar={withBalanceBar}\n      isLowStackPriority={isLowStackPriority}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PeerBadge-module__root\",\"top\":\"PeerBadge-module__top\",\"badge\":\"PeerBadge-module__badge\",\"text\":\"PeerBadge-module__text\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"PickerModal-module__content\",\"fixedHeight\":\"PickerModal-module__fixedHeight\",\"withSearch\":\"PickerModal-module__withSearch\",\"header\":\"PickerModal-module__header\",\"buttonWrapper\":\"PickerModal-module__buttonWrapper\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TableAboutModal-module__root\",\"title\":\"TableAboutModal-module__title\",\"description\":\"TableAboutModal-module__description\",\"secondary\":\"TableAboutModal-module__secondary\",\"topIcon\":\"TableAboutModal-module__topIcon\",\"listItemIcon\":\"TableAboutModal-module__listItemIcon\",\"content\":\"TableAboutModal-module__content\",\"separator\":\"TableAboutModal-module__separator\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"TableInfoModal-module__content\",\"title\":\"TableInfoModal-module__title\",\"value\":\"TableInfoModal-module__value\",\"table\":\"TableInfoModal-module__table\",\"noFooter\":\"TableInfoModal-module__noFooter\",\"cell\":\"TableInfoModal-module__cell\",\"fullWidth\":\"TableInfoModal-module__fullWidth\",\"avatar\":\"TableInfoModal-module__avatar\",\"chatItem\":\"TableInfoModal-module__chatItem\"};","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"StarTopupOptionList-module__options\",\"option\":\"StarTopupOptionList-module__option\",\"active\":\"StarTopupOptionList-module__active\",\"wideOption\":\"StarTopupOptionList-module__wideOption\",\"optionTop\":\"StarTopupOptionList-module__optionTop\",\"stackedStars\":\"StarTopupOptionList-module__stackedStars\",\"stackedStar\":\"StarTopupOptionList-module__stackedStar\",\"optionBottom\":\"StarTopupOptionList-module__optionBottom\",\"moreOptions\":\"StarTopupOptionList-module__moreOptions\",\"iconDown\":\"StarTopupOptionList-module__iconDown\"};"],"names":["React","memo","buildClassName","useLang","Avatar","Icon","styles","PeerBadge","peer","avatarPeer","avatarWebPhoto","avatarSize","text","badgeText","badgeIcon","className","badgeClassName","badgeIconClassName","textClassName","onClick","lang","createElement","root","clickable","top","size","webPhoto","badge","dir","isRtl","name","useOldLang","Button","Modal","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","Boolean","_extends","isSlim","withSearch","fixedHeight","contentClassName","content","headerClassName","header","children","buttonWrapper","onClose","color","disabled","ListItem","Separator","TableAboutModal","isOpen","listItemData","headerIconName","footer","buttonText","hasBackdrop","withSeparator","onButtonClick","hasAbsoluteCloseButton","absoluteCloseButtonColor","undefined","topIcon","map","icon","title","subtitle","isStatic","multiline","iconClassName","listItemIcon","separator","getActions","useLastCallback","PeerChip","TableInfoModal","tableData","headerAvatarPeer","modalHeader","withBalanceBar","isLowStackPriority","openChat","handleOpenChat","peerId","id","hasCloseButton","avatar","table","label","value","Fragment","cell","fullWidth","chatId","chatItem","forceShowSelf","withEmojiStatus","clickArg","noFooter","useEffect","useMemo","formatCurrency","formatInteger","renderText","useFlag","StarIcon","MAX_STARS_COUNT","StarTopupOptionList","isActive","options","selectedStarOption","selectedStarCount","starsNeeded","oldLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","key","optionTop","stackedStars","Array","from","stackedStar","type","optionBottom","amount","currency","moreOptions","isText","noForcedUpperCase","iconDown"],"sourceRoot":""}